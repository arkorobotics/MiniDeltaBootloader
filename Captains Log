Captains Log:

I attempted to update the firmware from v37 to v41, but that failed. So I opened up the printer and discovered that there is a debug port exposed on the motion controller: https://twitter.com/arkorobotics/status/954854394301837312
After wiring up my stlink debugger to it, I was able to communicate with the chip (stm32f070), but unable to write to it. After scratching my head a bunch and attempting to try different reset/boot mode configurations, I discovered that the manufacturer had enabled write protection to the chip. Using OpenOCD, I was able to work around that and unlock it :)
So finally, I was able to successfully write the v41 firmware to the chip, but as it turns out, that firmware doesn't work for my printer... Thankfully, my buddy had recently purchased a brand new Mini Delta and we were able to compare the motion controller boards. Based on our observations, it appears they made several board level changes over the past few months. So it maybe that older boards don't support the new firmware.
Anyway... I'd like to get back to printing again, so I'm willing to downgrade the firmware to v37, but I can't seem to find it posted anywhere. Anyone know where I can find it?

This was wrong, i loaded v41 at 0x0800_0000 which wrote over the bootloader. In reality, the bootloader lived at the start of flash and the 'firmware.bin' file is suppose to live at some offset from the start (after the bootloader).

Get version 41, load to 0x0800_0000, doesnt work.

Sweep addresses at steps of page size 0x0800, doesn't work.

Debug mode, look at where the stack pointer (where processor loaded data into stack last) and program counter (where the instruction pointer is), added instructions around the firmware to jump to the beginning of the program, doesn't work.

Find: https://jcastellssala.com/2016/12/15/cortex-m0-boot/
Going to try writing a custom bootloader to configure the vector table, then load the firmware.bin after that
Leading theory is that Bootloader lives at 0x0800_0000 and Program lives at 0x0800_2000

Requires installing STM32F0Cube libraries which requires installing STM32CubeMX which Java JDK (ewww, but ok).. installing this sucked so much that i gave up. absolute garbage.

got openblt instead, able to build a bootloader, but need to modify linker and .S, then figure out how to add the firmware.bin (or try disassembling)

Got binary ninja to disassemble firmware.bin. Goal is to better understand the firmware and what it's doing in order to gear the bootloader to serve it correctly.

Page 170 contains the Vector Table (SUPER USEFUL):
http://www.st.com/content/ccc/resource/technical/document/reference_manual/cf/10/a8/c4/29/fb/4c/42/DM00091010.pdf/files/DM00091010.pdf/jcr:content/translations/en.DM00091010.pdf

Datasheet for MCU (STM32F070CB):
http://www.st.com/content/ccc/resource/technical/document/datasheet/31/4f/10/5f/a5/32/46/42/DM00141386.pdf/files/DM00141386.pdf/jcr:content/translations/en.DM00141386.pdf

STM32F0 Instruction Set:
http://www.st.com/content/ccc/resource/technical/document/programming_manual/fc/90/c7/17/a1/44/43/89/DM00051352.pdf/files/DM00051352.pdf/jcr:content/translations/en.DM00051352.pdf

Useful things about thumb2/arm instructions:
14:02 < adamgreig> http://4.bp.blogspot.com/-p9ZZHSWdabw/T8eVsh4tGQI/AAAAAAAAEbw/HEOdM_mHbcE/s1600/m4F+instruction.jpg
14:02 < adamgreig> https://community.arm.com/cfs-file/__key/communityserver-blogs-components-weblogfiles/00-00-00-21-42/7848.Instruction_2B00_set.jpg


How to reverse engineer the "firmware.bin" file

Step 1:
Using Binary Ninja:
0) Copy firmware.bin to firmware_v41.bin
1) Open firmware_v41.bin
2) Load Address: 0x08002000
3) Entry Point: 0x080171f4
4) Disassembly 9000!!!!





